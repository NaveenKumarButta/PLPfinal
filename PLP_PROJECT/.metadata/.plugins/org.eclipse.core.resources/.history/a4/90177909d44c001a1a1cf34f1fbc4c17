package com.capgemini.storesmanagementsystem.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.capgemini.storesmanagementsystem.dto.UserDetailsInfo;

public class AdminDaoImpl implements AdminDao{
	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	Statement stmt = null;

	public List<String> loginAdmin(String userId, String password) {
		List<String> users = new ArrayList<String>();

		try {
			Class.forName("com.mysql.jdbc.Driver");
			String dburl = "jdbc:mysql://localhost:3306/stores_management_db?user=root&password=hr";
			con = DriverManager.getConnection(dburl);
			String qry = "select * from userDetailsInfo where userId =? and password=?";
			pstmt = con.prepareStatement(qry);
			rs = pstmt.executeQuery();

			while (rs.next()) {
				users.add(rs.getString("userId"));
				users.add(rs.getString("password"));

			}
		} catch (Exception e) {
			e.getMessage();
		}finally {
			try {
				con.close();
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
		}

		return users;
	}

	public boolean addManufacturer(UserDetailsInfo user) {
		boolean isAdded = false;
		try {
			Class.forName("com.mysql.jdbc.Driver");
			String dburl = "jdbc:mysql://localhost:3306/stores_management_db?user=root&password=hr";
			con = DriverManager.getConnection(dburl);
			String qry = " insert into  userDetailsInfo  values (?,?,?,?,?,?)";
			pstmt = con.prepareStatement(qry);
			pstmt.setInt(1, user.getUserId());
			pstmt.setString(2, user.getUserName());
			pstmt.setString(3,user.getEmail());
			pstmt.setString(4, user.getPassword());
			pstmt.setString(5,user.getAddress());
			pstmt.setString(6, user.getUserRole());
			
			int r = pstmt.executeUpdate();
			System.out.println(r);

			if (r != 0) {
				isAdded = true;
			}

		} catch (Exception e) {

			e.printStackTrace();
		}finally {
			try {
				con.close();
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
		}

		return isAdded;
	}
	
	@Override
	public boolean updateManufacturer(String userId, UserDetailsInfo user) {
		
		try {
			Class.forName("com.mysql.jdbc.Driver");
			String dburl = "jdbc:mysql://localhost:3306/stores_management_db?user=root&password=hr";
			Connection con = DriverManager.getConnection(dburl);

			String qry = "update userDetailsInfo set userName=?,email=?,password=?,address=?,userRole=? where userId=?";
			pstmt = con.prepareStatement(qry);
		   
		    pstmt.setString(1, user.getUserName());
		    pstmt.setString(2, user.getEmail());
		    pstmt.setString(3, user.getPassword());
		    pstmt.setString(4, user.getAddress());
		    pstmt.setString(5, user.getUserRole());
		    pstmt.setInt(6,user.getUserId());
		    
			 pstmt.executeUpdate();
             return true;
		} catch (Exception e) {
			
			e.printStackTrace();
		}finally {
			try {
				con.close();
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
		}

		return false;
	}


	
	public boolean deleteManufacturer(String userId) {
		
		try {
			Class.forName("com.mysql.jdbc.Driver");
			String dburl = "jdbc:mysql://localhost:3306/stores_management_db?user=root&password=hr";
			con = DriverManager.getConnection(dburl);
			String qry = "delete from userDetailsInfo where userId=?";
			pstmt = con.prepareStatement(qry);
			pstmt.setString(1, userId);
			pstmt.executeUpdate();
		} catch (Exception e) {

			e.getMessage();
		}finally {
			try {
				con.close();
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
		}
		return true;
	}

	
	
	public List<String> viewAllManufacturers() {
		
		List<String> manufacturers = new ArrayList<>();
		try {
			Class.forName("com.mysql.jdbc.Driver");
			String dburl = "jdbc:mysql://localhost:3306/stores_management_db?user=root&password=hr";
			Connection con = DriverManager.getConnection(dburl);
			String qry = "select * from usersDetailsInfo ";
			pstmt=con.prepareStatement(qry);

			ResultSet rs = pstmt.executeQuery();

			while (rs.next()) {
				manufacturers.add(rs.getString("userName"));
				manufacturers.add(rs.getString("userId"));
				manufacturers.add(rs.getString("email"));
				manufacturers.add(rs.getString("address"));
				
			}
		} catch (Exception e) {

			e.getMessage();
		}finally {
			try {
				con.close();
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
		}

		return manufacturers;

	}

	
}



